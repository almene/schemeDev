from bioCanon import __main__


def test_mask_unsupported():
    memberships = {'Q': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   'R': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
                   'O': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3],
                   'P': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4],
                   'J': [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0],
                   'I': [1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0],
                   'H': [1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0],
                   'G': [1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0],
                   'S': [1, 1, 1, 1, 1, 2, 3, 0, 0, 0, 0, 0],
                   'F': [1, 1, 1, 1, 1, 2, 4, 0, 0, 0, 0, 0],
                   'B': [1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0],
                   'C': [1, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0],
                   'T': [1, 1, 1, 2, 4, 3, 0, 0, 0, 0, 0, 0],
                   'U': [1, 1, 1, 2, 4, 4, 0, 0, 0, 0, 0, 0],
                   'M': [1, 1, 2, 3, 5, 5, 0, 0, 0, 0, 0, 0],
                   'N': [1, 1, 2, 3, 5, 6, 0, 0, 0, 0, 0, 0],
                   'K': [1, 1, 2, 3, 6, 7, 0, 0, 0, 0, 0, 0],
                   'L': [1, 1, 2, 3, 6, 8, 0, 0, 0, 0, 0, 0],
                   'E': [1, 1, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0],
                   'D': [1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   'V': [1, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   'A': [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
    scheme = {9: {}, 8: {1: [
        {'position': 359, 'ref_base': 'T', 'alt_base': 'C', 'ref_count': 17, 'alt_count': 5,
         'positive_group': 'alt', 'g_id': 1, 'rank_id': 8,
         'qc_warnings': ['One or more degenerate bases'],
         'positive_tile': 'TGTTGAAGTTCGGCGCTACATCNGTGGCAAA',
         'negative_tile': 'TGTTGAAGTTCGGCGTTACATCNGTGGCAAA'},
        {'position': 515, 'ref_base': 'T', 'alt_base': 'G', 'ref_count': 17, 'alt_count': 5,
         'positive_group': 'alt', 'g_id': 1, 'rank_id': 8,
         'qc_warnings': ['One or more degenerate bases'],
         'positive_tile': 'TCGGCGGNCAGGATGGTTTGCCGAATATCAG',
         'negative_tile': 'TCGGCGGNCAGGATGTTTTGCCGAATATCAG'},
        {'position': 9797, 'ref_base': 'C', 'alt_base': 'T', 'ref_count': 17, 'alt_count': 5,
         'positive_group': 'alt', 'g_id': 1, 'rank_id': 8, 'qc_warnings': [],
         'positive_tile': 'CGGCAAAAATTTGCGTGATACCGCCGTAGAA',
         'negative_tile': 'CGGCAAAAATTTGCGCGATACCGCCGTAGAA'},
        {'position': 9864, 'ref_base': 'C', 'alt_base': 'T', 'ref_count': 17, 'alt_count': 5,
         'positive_group': 'alt', 'g_id': 1, 'rank_id': 8, 'qc_warnings': [],
         'positive_tile': 'AAAACCGGCATTGTGTAGGTTAAGCAGAATG',
         'negative_tile': 'AAAACCGGCATTGTGCAGGTTAAGCAGAATG'},
        {'position': 1895, 'ref_base': 'C', 'alt_base': 'A', 'ref_count': 17, 'alt_count': 5,
         'positive_group': 'alt', 'g_id': 1, 'rank_id': 8,
         'qc_warnings': ['One or more degenerate bases'],
         'positive_tile': 'GCCTGAATCTGGANAACTGGCAGGCGGAACT',
         'negative_tile': 'GCCTGAATCTGGANACCTGGCAGGCGGAACT'}]}}
    __main__.mask_unsupported(memberships, scheme)
    compare = {'Q': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 'R': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
               'O': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 'P': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
               'J': [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], 'I': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'H': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'G': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'S': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'F': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'B': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'C': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'T': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'U': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'M': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'N': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'K': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'L': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'E': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'D': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'V': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'A': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
    assert memberships == compare
