from bioCanon import __main__
from ete3 import Tree


def test_get_tree():
    testing_tree = Tree("((((((((((((Q,R),(O,P)),J),I),H),G),(S,F)),B),(C,(T,U))),"
                        "(((M,N),(K,L)),E)),(D,V)),A);")
    case = __main__.get_tree_groups(testing_tree)
    compare = {'Q': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'R': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
               'O': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3], 'P': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4],
               'J': [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0], 'I': [1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0],
               'H': [1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0], 'G': [1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0],
               'S': [1, 1, 1, 1, 1, 2, 3, 0, 0, 0, 0, 0], 'F': [1, 1, 1, 1, 1, 2, 4, 0, 0, 0, 0, 0],
               'B': [1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0], 'C': [1, 1, 1, 2, 3, 0, 0, 0, 0, 0, 0, 0],
               'T': [1, 1, 1, 2, 4, 3, 0, 0, 0, 0, 0, 0], 'U': [1, 1, 1, 2, 4, 4, 0, 0, 0, 0, 0, 0],
               'M': [1, 1, 2, 3, 5, 5, 0, 0, 0, 0, 0, 0], 'N': [1, 1, 2, 3, 5, 6, 0, 0, 0, 0, 0, 0],
               'K': [1, 1, 2, 3, 6, 7, 0, 0, 0, 0, 0, 0], 'L': [1, 1, 2, 3, 6, 8, 0, 0, 0, 0, 0, 0],
               'E': [1, 1, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0], 'D': [1, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               'V': [1, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'A': [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}

    assert case == compare
